Create github repository to store our application code
Clone the github repository to our pc
Open the repository with VS and update the .gitignore file with the reference.
Add terraform code into the repository iac folder reference
Create a secrete in aws secrete manager to add value to our rds database
Update backend.tf file to store our terraform statefile on s3 bucket
Filling out the value in the terraform.tfvars file
Running the Terraform Apply command to test the terraform code
our terraform code work correctly
We need to destroy it 
Start to build the CICD Pipeline in Github Actions
Creating a Github Personal Access Token
Creating github Repository Secrets
open our rentzone repository in github and click setting scroll down and click secrets and variables select Actions
and click New Repository Secret add the bellow information and their value to the Repository Secret
# AWS_ACCESS_KEY_ID
# AWS_SECRET_ACCESS_KEY
# ECR_REGISTRY
# PERSONAL_ACCESS_TOKEN
# RDS_DB_NAME
# RDS_DB_PASSWORD
# RDS_DB_USERNAME

Now Creating a Github Actions Workflow File
Create a new folder called it .github after that right click on .github folder and click new folder and name it workflows.
Next right click on workflows folder and click new file then nema it deploy_pipeline.yml

Next Creating a Github Actions Job to Configure AWS Credentials
Copy the reference file configure_aws_credentials_reference from aosnote and paste it into deploy_pipeline file.
AWS Credentials configure seccessfully 

Next Creating a Github Actions Job to Deploy AWS Infrastructure to apply our terraform code
AWS Infrastructure apply successfully through Github Actions

Next Creating a Github Actions Job to Destroy AWS Infrastructure we just deploy

Next Creating  a Github Actions Job to create an amazon ECR Repository
copy the reference file in aosnote and paste it in Deploy_pipeline file

*** Next creating a Self-Hosted Runner ***
firsly launch an Amazon Linux 2 EC2 Instance in public subnet use the default vpc in the Management Console.
no subnet because our default vpc has only public subnet and we need to create security group and open port 22 and source myip

Next SSH into an EC2 Instance
We have SSH into an EC2 instance successful 

Next Install docker and github on the EC2 Instance
reference link https://github.com/machulav/ec2-github-runner
We have Install docker and github on the EC2 Instance successfully 

Next Creating an Amazon Machine Image AMI and Terminating the EC2 Instance
Select your EC2 instance and click action scroll to Image and Templates Click Create Image
Give Image name = Github Action Runner
Give Image description = Github Action Runner
Instance volumes 
Storage type Size = 20  # We change it to 20 so that our docker will have enough storage to run the job
Tags =  Tag image and snapshots together
Click add New Tag
Key = Name
Value = Github Action Runner

Then click Create Image
We have created AMI successfully 

Next is to terminate ec2 instance

Next Creating Github Actions Job to start a Self-Hosted Runner
We have successefully created Github Actions Job to start a Self-Hosted Runner

Next Creating a Github Actions Job to Build a Docker Image
Before we can create the Job to build a Docker Image 
1. we need to set up a repository to store the application code
2. Add the application code to the repository
3. Create a Dockerfile and paste the reference file on it
4. Create the appserviceprovider.php file  and paste the reference file on it

Next Create a Github Actions Job to Build and Push a Docker Image into Amazon ECR
copy the build docker image variables from aos note and paste it into deploy_pipeline under env:

Next copy the build_and_push_image_reference from aos note and paste it into deploy_pipeline

Next Create a Github Actions Job to Export the Environment Variables into the S3 bucket
To do that copy the export_env_variables_reference from aos note and paste it into deploy_pipeline

Next Create the SQL Folder and Adding the SQL Script from aos note into it
Next Create a Github Actions Job to migrate Data into the RDS Database with Flyway








